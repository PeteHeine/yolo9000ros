<launch>	
	<!-- Makes yolo detection node -->
	<node type="darknet_ros_node" name="yolo" pkg="darknet_ros" respawn="true" output="screen">
		<param name="model_cfg" value="$(find darknet_ros)/cfg/yoloSmall20.cfg" />
		<param name="weightfile" value="$(find darknet_ros)/weight/yoloSmall20.weights" />
		<param name="threshold" value="0.2" />
		<param name="topic_name" value="/usb_cam/image_raw" />
		<!-- "/Ptgrey_cameras/right/image_raw", "/camera/image_color", "/multisense/left/image_color", "/usb_cam/image_raw"    -->
	</node>

	<!-- usb_cam: RUNS usb CAM -->
	<node name="usb_cam" pkg="usb_cam" type="usb_cam_node" output="screen" >
		<param name="video_device" value="/dev/video0" />
		<param name="image_width" value="640" /> <!-- 640 -->
		<param name="image_height" value="480" /> <!-- 480 -->
		<param name="pixel_format" value="yuyv" />
		<param name="camera_frame_id" value="usb_cam" />
		<param name="io_method" value="mmap"/>
	</node>

	<!-- Makes viewing node for showing detected pedestrians. -->
	<node name="image_view" pkg="image_view" type="image_view" respawn="false" output="screen">
			<remap from="image" to="/yolo/imageYolo"/>
			<param name="autosize" value="false" />
	</node> 

	<!-- Converts bounding box to image -->
	<node type="bb2image.py" name="image2bb" pkg="image_inverse_sensor_model" respawn="true" output="screen">
		<param name="topicInName" value="/yolo/BBox/usb_cam/" />
		<param name="image_width" value="640" />
		<param name="image_height" value="480" />
		<param name="objectType_unknown" value="False" />
		<param name="objectType_vehicle" value="False" />
		<param name="objectType_human" value="True" />
	</node>

	<!-- Use perspektive mapping to transform a detection image to an inverse sensor model -->
	<node type="image2ism.py" name="image2ismYolo" pkg="image_inverse_sensor_model" respawn="true" output="screen">
		<param name="topicIns" value="/det/usb_cam/yolo/unknown /det/usb_cam/yolo/vehicle /det/usb_cam/yolo/human" /> <!-- Add multiple topics by seperating them by a space-->
		<param name="imageWidth" value="400" />
		<param name="imageHeight" value="300" />
		<param name="cam_xTranslation" value="0.2038" /> 
		<param name="cam_yTranslation" value="0.255" />
		<param name="cam_zTranslation" value="2.056" />
		<param name="cam_pitch" value="0.1963" />  
		<param name="cam_yaw" value="0.0" />
		<param name="cam_FOV" value="0.68067" />
		<param name="grid_resolution" value="0.5" />
		<param name="grid_xSizeInM" value="-1.0" />
		<param name="grid_ySizeInM" value="-1.0" />
	</node>
</launch>
